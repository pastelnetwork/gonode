// Code generated by goa v3.15.0, DO NOT EDIT.
//
// HealthCheckChallenge HTTP client CLI support package
//
// Command:
// $ goa gen github.com/pastelnetwork/gonode/walletnode/api/design

package client

import (
	healthcheckchallenge "github.com/pastelnetwork/gonode/walletnode/api/gen/health_check_challenge"
	goa "goa.design/goa/v3/pkg"
)

// BuildGetSummaryStatsPayload builds the payload for the HealthCheckChallenge
// getSummaryStats endpoint from CLI flags.
func BuildGetSummaryStatsPayload(healthCheckChallengeGetSummaryStatsFrom string, healthCheckChallengeGetSummaryStatsTo string, healthCheckChallengeGetSummaryStatsPid string, healthCheckChallengeGetSummaryStatsKey string) (*healthcheckchallenge.GetSummaryStatsPayload, error) {
	var err error
	var from *string
	{
		if healthCheckChallengeGetSummaryStatsFrom != "" {
			from = &healthCheckChallengeGetSummaryStatsFrom
			err = goa.MergeErrors(err, goa.ValidateFormat("from", *from, goa.FormatDateTime))
			if err != nil {
				return nil, err
			}
		}
	}
	var to *string
	{
		if healthCheckChallengeGetSummaryStatsTo != "" {
			to = &healthCheckChallengeGetSummaryStatsTo
			err = goa.MergeErrors(err, goa.ValidateFormat("to", *to, goa.FormatDateTime))
			if err != nil {
				return nil, err
			}
		}
	}
	var pid string
	{
		pid = healthCheckChallengeGetSummaryStatsPid
	}
	var key string
	{
		key = healthCheckChallengeGetSummaryStatsKey
	}
	v := &healthcheckchallenge.GetSummaryStatsPayload{}
	v.From = from
	v.To = to
	v.Pid = pid
	v.Key = key

	return v, nil
}
