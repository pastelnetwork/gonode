// Code generated by goa v3.3.1, DO NOT EDIT.
//
// userdatas client HTTP transport
//
// Command:
// $ goa gen github.com/pastelnetwork/gonode/walletnode/api/design

package client

import (
	"context"
	"mime/multipart"
	"net/http"

	userdatas "github.com/pastelnetwork/gonode/walletnode/api/gen/userdatas"
	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the userdatas service endpoint HTTP clients.
type Client struct {
	// ProcessUserdata Doer is the HTTP client used to make requests to the
	// processUserdata endpoint.
	ProcessUserdataDoer goahttp.Doer

	// UserdataGet Doer is the HTTP client used to make requests to the userdataGet
	// endpoint.
	UserdataGetDoer goahttp.Doer

	// CORS Doer is the HTTP client used to make requests to the  endpoint.
	CORSDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// UserdatasProcessUserdataEncoderFunc is the type to encode multipart request
// for the "userdatas" service "processUserdata" endpoint.
type UserdatasProcessUserdataEncoderFunc func(*multipart.Writer, *userdatas.ProcessUserdataPayload) error

// NewClient instantiates HTTP clients for all the userdatas service servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		ProcessUserdataDoer: doer,
		UserdataGetDoer:     doer,
		CORSDoer:            doer,
		RestoreResponseBody: restoreBody,
		scheme:              scheme,
		host:                host,
		decoder:             dec,
		encoder:             enc,
	}
}

// ProcessUserdata returns an endpoint that makes HTTP requests to the
// userdatas service processUserdata server.
func (c *Client) ProcessUserdata(userdatasProcessUserdataEncoderFn UserdatasProcessUserdataEncoderFunc) goa.Endpoint {
	var (
		encodeRequest  = EncodeProcessUserdataRequest(NewUserdatasProcessUserdataEncoder(userdatasProcessUserdataEncoderFn))
		decodeResponse = DecodeProcessUserdataResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildProcessUserdataRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.ProcessUserdataDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("userdatas", "processUserdata", err)
		}
		return decodeResponse(resp)
	}
}

// UserdataGet returns an endpoint that makes HTTP requests to the userdatas
// service userdataGet server.
func (c *Client) UserdataGet() goa.Endpoint {
	var (
		decodeResponse = DecodeUserdataGetResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildUserdataGetRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.UserdataGetDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("userdatas", "userdataGet", err)
		}
		return decodeResponse(resp)
	}
}
