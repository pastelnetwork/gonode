// Code generated by goa v3.15.0, DO NOT EDIT.
//
// Score client
//
// Command:
// $ goa gen github.com/pastelnetwork/gonode/walletnode/api/design

package score

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Score" service client.
type Client struct {
	GetAggregatedChallengesScoresEndpoint goa.Endpoint
}

// NewClient initializes a "Score" service client given the endpoints.
func NewClient(getAggregatedChallengesScores goa.Endpoint) *Client {
	return &Client{
		GetAggregatedChallengesScoresEndpoint: getAggregatedChallengesScores,
	}
}

// GetAggregatedChallengesScores calls the "getAggregatedChallengesScores"
// endpoint of the "Score" service.
// GetAggregatedChallengesScores may return the following errors:
//   - "Unauthorized" (type *goa.ServiceError)
//   - "BadRequest" (type *goa.ServiceError)
//   - "NotFound" (type *goa.ServiceError)
//   - "InternalServerError" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) GetAggregatedChallengesScores(ctx context.Context, p *GetAggregatedChallengesScoresPayload) (res []*ChallengesScores, err error) {
	var ires any
	ires, err = c.GetAggregatedChallengesScoresEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*ChallengesScores), nil
}
