// Code generated by goa v3.13.0, DO NOT EDIT.
//
// collection views
//
// Command:
// $ goa gen github.com/pastelnetwork/gonode/walletnode/api/design

package views

import (
	"unicode/utf8"

	goa "goa.design/goa/v3/pkg"
)

// RegisterCollectionResponse is the viewed result type that is projected based
// on a view.
type RegisterCollectionResponse struct {
	// Type to project
	Projected *RegisterCollectionResponseView
	// View to render
	View string
}

// RegisterCollectionResponseView is a type that runs validations on a
// projected type.
type RegisterCollectionResponseView struct {
	// Uploaded file ID
	TaskID *string
}

var (
	// RegisterCollectionResponseMap is a map indexing the attribute names of
	// RegisterCollectionResponse by view name.
	RegisterCollectionResponseMap = map[string][]string{
		"default": {
			"task_id",
		},
	}
)

// ValidateRegisterCollectionResponse runs the validations defined on the
// viewed result type RegisterCollectionResponse.
func ValidateRegisterCollectionResponse(result *RegisterCollectionResponse) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateRegisterCollectionResponseView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []any{"default"})
	}
	return
}

// ValidateRegisterCollectionResponseView runs the validations defined on
// RegisterCollectionResponseView using the "default" view.
func ValidateRegisterCollectionResponseView(result *RegisterCollectionResponseView) (err error) {
	if result.TaskID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("task_id", "result"))
	}
	if result.TaskID != nil {
		if utf8.RuneCountInString(*result.TaskID) < 8 {
			err = goa.MergeErrors(err, goa.InvalidLengthError("result.task_id", *result.TaskID, utf8.RuneCountInString(*result.TaskID), 8, true))
		}
	}
	if result.TaskID != nil {
		if utf8.RuneCountInString(*result.TaskID) > 8 {
			err = goa.MergeErrors(err, goa.InvalidLengthError("result.task_id", *result.TaskID, utf8.RuneCountInString(*result.TaskID), 8, false))
		}
	}
	return
}
