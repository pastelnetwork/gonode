// Code generated by goa v3.14.0, DO NOT EDIT.
//
// metrics views
//
// Command:
// $ goa gen github.com/pastelnetwork/gonode/walletnode/api/design

package views

import (
	goa "goa.design/goa/v3/pkg"
)

// SelfHealingMetrics is the viewed result type that is projected based on a
// view.
type SelfHealingMetrics struct {
	// Type to project
	Projected *SelfHealingMetricsView
	// View to render
	View string
}

// SelfHealingMetricsView is a type that runs validations on a projected type.
type SelfHealingMetricsView struct {
	// Tickets send for self-healing
	TotalTicketsSendForSelfHealing *int
	// Total estimated missing keys
	EstimatedMissingKeys *int
	// Tickets required self healing
	TicketsRequiredSelfHealing *int
	// Tickets self-healed successfully
	TicketsSelfHealedSuccessfully *int
	// Tickets verified successfully
	TicketsVerifiedSuccessfully *int
}

var (
	// SelfHealingMetricsMap is a map indexing the attribute names of
	// SelfHealingMetrics by view name.
	SelfHealingMetricsMap = map[string][]string{
		"default": {
			"total_tickets_send_for_self_healing",
			"estimated_missing_keys",
			"tickets_required_self_healing",
			"tickets_self_healed_successfully",
			"tickets_verified_successfully",
		},
	}
)

// ValidateSelfHealingMetrics runs the validations defined on the viewed result
// type SelfHealingMetrics.
func ValidateSelfHealingMetrics(result *SelfHealingMetrics) (err error) {
	switch result.View {
	case "default", "":
		err = ValidateSelfHealingMetricsView(result.Projected)
	default:
		err = goa.InvalidEnumValueError("view", result.View, []any{"default"})
	}
	return
}

// ValidateSelfHealingMetricsView runs the validations defined on
// SelfHealingMetricsView using the "default" view.
func ValidateSelfHealingMetricsView(result *SelfHealingMetricsView) (err error) {

	return
}
