// Code generated by goa v3.13.0, DO NOT EDIT.
//
// cascade client
//
// Command:
// $ goa gen github.com/pastelnetwork/gonode/walletnode/api/design

package cascade

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "cascade" service client.
type Client struct {
	UploadAssetEndpoint       goa.Endpoint
	StartProcessingEndpoint   goa.Endpoint
	RegisterTaskStateEndpoint goa.Endpoint
	GetTaskHistoryEndpoint    goa.Endpoint
	DownloadEndpoint          goa.Endpoint
}

// NewClient initializes a "cascade" service client given the endpoints.
func NewClient(uploadAsset, startProcessing, registerTaskState, getTaskHistory, download goa.Endpoint) *Client {
	return &Client{
		UploadAssetEndpoint:       uploadAsset,
		StartProcessingEndpoint:   startProcessing,
		RegisterTaskStateEndpoint: registerTaskState,
		GetTaskHistoryEndpoint:    getTaskHistory,
		DownloadEndpoint:          download,
	}
}

// UploadAsset calls the "uploadAsset" endpoint of the "cascade" service.
// UploadAsset may return the following errors:
//   - "BadRequest" (type *goa.ServiceError)
//   - "NotFound" (type *goa.ServiceError)
//   - "InternalServerError" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) UploadAsset(ctx context.Context, p *UploadAssetPayload) (res *Asset, err error) {
	var ires any
	ires, err = c.UploadAssetEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*Asset), nil
}

// StartProcessing calls the "startProcessing" endpoint of the "cascade"
// service.
// StartProcessing may return the following errors:
//   - "BadRequest" (type *goa.ServiceError)
//   - "NotFound" (type *goa.ServiceError)
//   - "InternalServerError" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) StartProcessing(ctx context.Context, p *StartProcessingPayload) (res *StartProcessingResult, err error) {
	var ires any
	ires, err = c.StartProcessingEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*StartProcessingResult), nil
}

// RegisterTaskState calls the "registerTaskState" endpoint of the "cascade"
// service.
// RegisterTaskState may return the following errors:
//   - "BadRequest" (type *goa.ServiceError)
//   - "NotFound" (type *goa.ServiceError)
//   - "InternalServerError" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) RegisterTaskState(ctx context.Context, p *RegisterTaskStatePayload) (res RegisterTaskStateClientStream, err error) {
	var ires any
	ires, err = c.RegisterTaskStateEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(RegisterTaskStateClientStream), nil
}

// GetTaskHistory calls the "getTaskHistory" endpoint of the "cascade" service.
// GetTaskHistory may return the following errors:
//   - "BadRequest" (type *goa.ServiceError)
//   - "NotFound" (type *goa.ServiceError)
//   - "InternalServerError" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) GetTaskHistory(ctx context.Context, p *GetTaskHistoryPayload) (res []*TaskHistory, err error) {
	var ires any
	ires, err = c.GetTaskHistoryEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.([]*TaskHistory), nil
}

// Download calls the "download" endpoint of the "cascade" service.
// Download may return the following errors:
//   - "BadRequest" (type *goa.ServiceError)
//   - "NotFound" (type *goa.ServiceError)
//   - "InternalServerError" (type *goa.ServiceError)
//   - error: internal error
func (c *Client) Download(ctx context.Context, p *DownloadPayload) (res *FileDownloadResult, err error) {
	var ires any
	ires, err = c.DownloadEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*FileDownloadResult), nil
}
