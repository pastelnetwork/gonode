// Code generated by goa v3.5.2, DO NOT EDIT.
//
// external_dupe_detection_api HTTP client encoders and decoders
//
// Command:
// $ goa gen github.com/pastelnetwork/gonode/walletnode/api/design

package client

import (
	"bytes"
	"context"
	"io/ioutil"
	"net/http"
	"net/url"

	externaldupedetectionapi "github.com/pastelnetwork/gonode/walletnode/gen/external_dupe_detection_api"
	externaldupedetectionapiviews "github.com/pastelnetwork/gonode/walletnode/gen/external_dupe_detection_api/views"
	goahttp "goa.design/goa/v3/http"
)

// BuildInitiateSubmissionRequest instantiates a HTTP request object with
// method and path set to call the "external_dupe_detection_api" service
// "initiate_submission" endpoint
func (c *Client) BuildInitiateSubmissionRequest(ctx context.Context, v interface{}) (*http.Request, error) {
	u := &url.URL{Scheme: c.scheme, Host: c.host, Path: InitiateSubmissionExternalDupeDetectionAPIPath()}
	req, err := http.NewRequest("POST", u.String(), nil)
	if err != nil {
		return nil, goahttp.ErrInvalidURL("external_dupe_detection_api", "initiate_submission", u.String(), err)
	}
	if ctx != nil {
		req = req.WithContext(ctx)
	}

	return req, nil
}

// EncodeInitiateSubmissionRequest returns an encoder for requests sent to the
// external_dupe_detection_api initiate_submission server.
func EncodeInitiateSubmissionRequest(encoder func(*http.Request) goahttp.Encoder) func(*http.Request, interface{}) error {
	return func(req *http.Request, v interface{}) error {
		p, ok := v.(*externaldupedetectionapi.ExternalDupeDetetionAPIInitiateSubmission)
		if !ok {
			return goahttp.ErrInvalidType("external_dupe_detection_api", "initiate_submission", "*externaldupedetectionapi.ExternalDupeDetetionAPIInitiateSubmission", v)
		}
		body := NewInitiateSubmissionRequestBody(p)
		if err := encoder(req).Encode(&body); err != nil {
			return goahttp.ErrEncodingError("external_dupe_detection_api", "initiate_submission", err)
		}
		return nil
	}
}

// DecodeInitiateSubmissionResponse returns a decoder for responses returned by
// the external_dupe_detection_api initiate_submission endpoint. restoreBody
// controls whether the response body should be restored after having been read.
// DecodeInitiateSubmissionResponse may return the following errors:
//	- "BadRequest" (type *goa.ServiceError): http.StatusBadRequest
//	- "InternalServerError" (type *goa.ServiceError): http.StatusInternalServerError
//	- error: internal error
func DecodeInitiateSubmissionResponse(decoder func(*http.Response) goahttp.Decoder, restoreBody bool) func(*http.Response) (interface{}, error) {
	return func(resp *http.Response) (interface{}, error) {
		if restoreBody {
			b, err := ioutil.ReadAll(resp.Body)
			if err != nil {
				return nil, err
			}
			resp.Body = ioutil.NopCloser(bytes.NewBuffer(b))
			defer func() {
				resp.Body = ioutil.NopCloser(bytes.NewBuffer(b))
			}()
		} else {
			defer resp.Body.Close()
		}
		switch resp.StatusCode {
		case http.StatusCreated:
			var (
				body InitiateSubmissionResponseBody
				err  error
			)
			err = decoder(resp).Decode(&body)
			if err != nil {
				return nil, goahttp.ErrDecodingError("external_dupe_detection_api", "initiate_submission", err)
			}
			p := NewInitiateSubmissionExternaldupedetetionapiinitiatesubmissionresultCreated(&body)
			view := "default"
			vres := &externaldupedetectionapiviews.Externaldupedetetionapiinitiatesubmissionresult{Projected: p, View: view}
			if err = externaldupedetectionapiviews.ValidateExternaldupedetetionapiinitiatesubmissionresult(vres); err != nil {
				return nil, goahttp.ErrValidationError("external_dupe_detection_api", "initiate_submission", err)
			}
			res := externaldupedetectionapi.NewExternaldupedetetionapiinitiatesubmissionresult(vres)
			return res, nil
		case http.StatusBadRequest:
			var (
				body InitiateSubmissionBadRequestResponseBody
				err  error
			)
			err = decoder(resp).Decode(&body)
			if err != nil {
				return nil, goahttp.ErrDecodingError("external_dupe_detection_api", "initiate_submission", err)
			}
			err = ValidateInitiateSubmissionBadRequestResponseBody(&body)
			if err != nil {
				return nil, goahttp.ErrValidationError("external_dupe_detection_api", "initiate_submission", err)
			}
			return nil, NewInitiateSubmissionBadRequest(&body)
		case http.StatusInternalServerError:
			var (
				body InitiateSubmissionInternalServerErrorResponseBody
				err  error
			)
			err = decoder(resp).Decode(&body)
			if err != nil {
				return nil, goahttp.ErrDecodingError("external_dupe_detection_api", "initiate_submission", err)
			}
			err = ValidateInitiateSubmissionInternalServerErrorResponseBody(&body)
			if err != nil {
				return nil, goahttp.ErrValidationError("external_dupe_detection_api", "initiate_submission", err)
			}
			return nil, NewInitiateSubmissionInternalServerError(&body)
		default:
			body, _ := ioutil.ReadAll(resp.Body)
			return nil, goahttp.ErrInvalidResponse("external_dupe_detection_api", "initiate_submission", resp.StatusCode, string(body))
		}
	}
}
