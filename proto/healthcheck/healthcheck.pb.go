// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.17.3
// source: healthcheck/healthcheck.proto

package healthcheck

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_healthcheck_healthcheck_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_healthcheck_healthcheck_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_healthcheck_healthcheck_proto_rawDescGZIP(), []int{0}
}

type StatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatusInJson string `protobuf:"bytes,1,opt,name=status_in_json,json=statusInJson,proto3" json:"status_in_json,omitempty"`
}

func (x *StatusReply) Reset() {
	*x = StatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_healthcheck_healthcheck_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusReply) ProtoMessage() {}

func (x *StatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_healthcheck_healthcheck_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusReply.ProtoReflect.Descriptor instead.
func (*StatusReply) Descriptor() ([]byte, []int) {
	return file_healthcheck_healthcheck_proto_rawDescGZIP(), []int{1}
}

func (x *StatusReply) GetStatusInJson() string {
	if x != nil {
		return x.StatusInJson
	}
	return ""
}

type P2PStoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *P2PStoreRequest) Reset() {
	*x = P2PStoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_healthcheck_healthcheck_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P2PStoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P2PStoreRequest) ProtoMessage() {}

func (x *P2PStoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_healthcheck_healthcheck_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P2PStoreRequest.ProtoReflect.Descriptor instead.
func (*P2PStoreRequest) Descriptor() ([]byte, []int) {
	return file_healthcheck_healthcheck_proto_rawDescGZIP(), []int{2}
}

func (x *P2PStoreRequest) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type P2PStoreReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *P2PStoreReply) Reset() {
	*x = P2PStoreReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_healthcheck_healthcheck_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P2PStoreReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P2PStoreReply) ProtoMessage() {}

func (x *P2PStoreReply) ProtoReflect() protoreflect.Message {
	mi := &file_healthcheck_healthcheck_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P2PStoreReply.ProtoReflect.Descriptor instead.
func (*P2PStoreReply) Descriptor() ([]byte, []int) {
	return file_healthcheck_healthcheck_proto_rawDescGZIP(), []int{3}
}

func (x *P2PStoreReply) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type P2PRetrieveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *P2PRetrieveRequest) Reset() {
	*x = P2PRetrieveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_healthcheck_healthcheck_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P2PRetrieveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P2PRetrieveRequest) ProtoMessage() {}

func (x *P2PRetrieveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_healthcheck_healthcheck_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P2PRetrieveRequest.ProtoReflect.Descriptor instead.
func (*P2PRetrieveRequest) Descriptor() ([]byte, []int) {
	return file_healthcheck_healthcheck_proto_rawDescGZIP(), []int{4}
}

func (x *P2PRetrieveRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type P2PRetrieveReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *P2PRetrieveReply) Reset() {
	*x = P2PRetrieveReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_healthcheck_healthcheck_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *P2PRetrieveReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*P2PRetrieveReply) ProtoMessage() {}

func (x *P2PRetrieveReply) ProtoReflect() protoreflect.Message {
	mi := &file_healthcheck_healthcheck_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use P2PRetrieveReply.ProtoReflect.Descriptor instead.
func (*P2PRetrieveReply) Descriptor() ([]byte, []int) {
	return file_healthcheck_healthcheck_proto_rawDescGZIP(), []int{5}
}

func (x *P2PRetrieveReply) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type QueryRqliteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *QueryRqliteRequest) Reset() {
	*x = QueryRqliteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_healthcheck_healthcheck_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRqliteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRqliteRequest) ProtoMessage() {}

func (x *QueryRqliteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_healthcheck_healthcheck_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRqliteRequest.ProtoReflect.Descriptor instead.
func (*QueryRqliteRequest) Descriptor() ([]byte, []int) {
	return file_healthcheck_healthcheck_proto_rawDescGZIP(), []int{6}
}

func (x *QueryRqliteRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

type QueryRqliteReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result string `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
}

func (x *QueryRqliteReply) Reset() {
	*x = QueryRqliteReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_healthcheck_healthcheck_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRqliteReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRqliteReply) ProtoMessage() {}

func (x *QueryRqliteReply) ProtoReflect() protoreflect.Message {
	mi := &file_healthcheck_healthcheck_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRqliteReply.ProtoReflect.Descriptor instead.
func (*QueryRqliteReply) Descriptor() ([]byte, []int) {
	return file_healthcheck_healthcheck_proto_rawDescGZIP(), []int{7}
}

func (x *QueryRqliteReply) GetResult() string {
	if x != nil {
		return x.Result
	}
	return ""
}

var File_healthcheck_healthcheck_proto protoreflect.FileDescriptor

var file_healthcheck_healthcheck_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2f, 0x68, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0b, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x22, 0x0f, 0x0a, 0x0d,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x33, 0x0a,
	0x0b, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x24, 0x0a, 0x0e,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x69, 0x6e, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x49, 0x6e, 0x4a, 0x73,
	0x6f, 0x6e, 0x22, 0x27, 0x0a, 0x0f, 0x50, 0x32, 0x50, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x21, 0x0a, 0x0d, 0x50,
	0x32, 0x50, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x26,
	0x0a, 0x12, 0x50, 0x32, 0x50, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x28, 0x0a, 0x10, 0x50, 0x32, 0x50, 0x52, 0x65, 0x74,
	0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x2a, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x2a, 0x0a, 0x10,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x32, 0xb1, 0x02, 0x0a, 0x0b, 0x48, 0x65, 0x61,
	0x6c, 0x74, 0x68, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x3e, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1a, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x44, 0x0a, 0x08, 0x50, 0x32, 0x50, 0x53,
	0x74, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x2e, 0x50, 0x32, 0x50, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x2e, 0x50, 0x32, 0x50, 0x53, 0x74, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4d,
	0x0a, 0x0b, 0x50, 0x32, 0x50, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x12, 0x1f, 0x2e,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x50, 0x32, 0x50, 0x52,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d,
	0x2e, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x50, 0x32, 0x50,
	0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x4d, 0x0a,
	0x0b, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x12, 0x1f, 0x2e, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x33, 0x5a, 0x31,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x61, 0x73, 0x74, 0x65,
	0x6c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x67, 0x6f, 0x6e, 0x6f, 0x64, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_healthcheck_healthcheck_proto_rawDescOnce sync.Once
	file_healthcheck_healthcheck_proto_rawDescData = file_healthcheck_healthcheck_proto_rawDesc
)

func file_healthcheck_healthcheck_proto_rawDescGZIP() []byte {
	file_healthcheck_healthcheck_proto_rawDescOnce.Do(func() {
		file_healthcheck_healthcheck_proto_rawDescData = protoimpl.X.CompressGZIP(file_healthcheck_healthcheck_proto_rawDescData)
	})
	return file_healthcheck_healthcheck_proto_rawDescData
}

var file_healthcheck_healthcheck_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_healthcheck_healthcheck_proto_goTypes = []interface{}{
	(*StatusRequest)(nil),      // 0: healthcheck.StatusRequest
	(*StatusReply)(nil),        // 1: healthcheck.StatusReply
	(*P2PStoreRequest)(nil),    // 2: healthcheck.P2PStoreRequest
	(*P2PStoreReply)(nil),      // 3: healthcheck.P2PStoreReply
	(*P2PRetrieveRequest)(nil), // 4: healthcheck.P2PRetrieveRequest
	(*P2PRetrieveReply)(nil),   // 5: healthcheck.P2PRetrieveReply
	(*QueryRqliteRequest)(nil), // 6: healthcheck.QueryRqliteRequest
	(*QueryRqliteReply)(nil),   // 7: healthcheck.QueryRqliteReply
}
var file_healthcheck_healthcheck_proto_depIdxs = []int32{
	0, // 0: healthcheck.HealthCheck.Status:input_type -> healthcheck.StatusRequest
	2, // 1: healthcheck.HealthCheck.P2PStore:input_type -> healthcheck.P2PStoreRequest
	4, // 2: healthcheck.HealthCheck.P2PRetrieve:input_type -> healthcheck.P2PRetrieveRequest
	6, // 3: healthcheck.HealthCheck.QueryRqlite:input_type -> healthcheck.QueryRqliteRequest
	1, // 4: healthcheck.HealthCheck.Status:output_type -> healthcheck.StatusReply
	3, // 5: healthcheck.HealthCheck.P2PStore:output_type -> healthcheck.P2PStoreReply
	5, // 6: healthcheck.HealthCheck.P2PRetrieve:output_type -> healthcheck.P2PRetrieveReply
	7, // 7: healthcheck.HealthCheck.QueryRqlite:output_type -> healthcheck.QueryRqliteReply
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_healthcheck_healthcheck_proto_init() }
func file_healthcheck_healthcheck_proto_init() {
	if File_healthcheck_healthcheck_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_healthcheck_healthcheck_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_healthcheck_healthcheck_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_healthcheck_healthcheck_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P2PStoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_healthcheck_healthcheck_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P2PStoreReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_healthcheck_healthcheck_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P2PRetrieveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_healthcheck_healthcheck_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*P2PRetrieveReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_healthcheck_healthcheck_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRqliteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_healthcheck_healthcheck_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRqliteReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_healthcheck_healthcheck_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_healthcheck_healthcheck_proto_goTypes,
		DependencyIndexes: file_healthcheck_healthcheck_proto_depIdxs,
		MessageInfos:      file_healthcheck_healthcheck_proto_msgTypes,
	}.Build()
	File_healthcheck_healthcheck_proto = out.File
	file_healthcheck_healthcheck_proto_rawDesc = nil
	file_healthcheck_healthcheck_proto_goTypes = nil
	file_healthcheck_healthcheck_proto_depIdxs = nil
}
