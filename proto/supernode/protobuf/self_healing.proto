// Copyright (c) 2021-2021 The Pastel Core developers
// Distributed under the MIT software license, see the accompanying
// file COPYING or http://www.opensource.org/licenses/mit-license.php.
syntax = "proto3";

option go_package = "github.com/pastelnetwork/gonode/proto/supernode;supernode";

package supernode;
import "common_sn.proto";

service SelfHealing {
  rpc Session(stream SessionRequest) returns (stream SessionReply);
  rpc Ping(PingRequest) returns (PingResponse);
  rpc ProcessSelfHealingChallenge(ProcessSelfHealingChallengeRequest) returns (ProcessSelfHealingChallengeReply);
  rpc VerifySelfHealingChallenge(VerifySelfHealingChallengeRequest) returns (VerifySelfHealingChallengeReply);
}

message PingRequest {
  string sender_id = 1;
}

message PingResponse {
  string sender_id = 1;
  string receiver_id = 2;
  bool is_online = 3;
  string responded_at = 4;
}

message ProcessSelfHealingChallengeRequest {
  SelfHealingMessage data = 1;
}

message ProcessSelfHealingChallengeReply {
  SelfHealingMessage data = 1;
}

message VerifySelfHealingChallengeRequest {
  SelfHealingMessage data = 1;
}

message VerifySelfHealingChallengeReply {
  SelfHealingMessage data = 1;
}

message SelfHealingMessage {
  enum messageType {
    MessageType_UNKNOWN = 0;
    MessageType_SELF_HEALING_CHALLENGE_MESSAGE = 1;
    MessageType_SELF_HEALING_RESPONSE_MESSAGE = 2;
    MessageType_SELF_HEALING_VERIFICATION_MESSAGE = 3;
  }
  messageType message_type = 1;
  string trigger_id = 2;
  bytes data = 3;
  string sender_id = 4;
  bytes sender_signature = 5;
}