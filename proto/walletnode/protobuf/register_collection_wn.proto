syntax = "proto3";

option go_package = "github.com/pastelnetwork/gonode/proto/walletnode";

package walletnode;
import "common_wn.proto";

// this proto defines GRPC methods that WN uses to talk to SNs during Collection Registration

service RegisterCollection {
  // Session informs the supernode its position (primary/secondary).
  // Returns `SessID` that are used by all other rpc methods to identify the task on the supernode. By sending `sessID` in the Metadata.
  // The stream is used by the parties to inform each other about the cancellation of the task.
  rpc Session(stream SessionRequest) returns (stream SessionReply);

  // AcceptedNodes returns peers of the secondary supernodes connected to it.
  rpc AcceptedNodes(AcceptedNodesRequest) returns (AcceptedNodesReply);

  // ConnectTo requests to connect to the primary supernode.
  rpc ConnectTo(ConnectToRequest) returns (ConnectToReply);

  // MeshNodes informs to SNs other SNs on same meshNodes created for this registration request
  rpc MeshNodes(MeshNodesRequest) returns (MeshNodesReply);

  // SendCollectionTicketForSignature sends a collection-ticket to be signed by the supernode.
  rpc SendCollectionTicketForSignature(SendCollectionTicketForSignatureRequest) returns (SendCollectionTicketForSignatureResponse);

  //GetTopMNs return top MNs list from the SN
  rpc GetTopMNs(GetTopMNsRequest) returns (GetTopMNsReply);
}

message SendCollectionTicketForSignatureRequest {
  bytes collection_ticket = 1;
  bytes creator_signature = 2;
  string burn_txid = 3;
}

message SendCollectionTicketForSignatureResponse {
  string collection_reg_txid = 1;
}
