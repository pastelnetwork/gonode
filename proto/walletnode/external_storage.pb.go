// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.18.1
// source: external_storage.proto

package walletnode

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SendSignedExternalStorageTicketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalStorageTicket []byte             `protobuf:"bytes,1,opt,name=external_storage_ticket,json=externalStorageTicket,proto3" json:"external_storage_ticket,omitempty"`
	CreatetorPastelId     string             `protobuf:"bytes,2,opt,name=createtor_pastel_id,json=createtorPastelId,proto3" json:"createtor_pastel_id,omitempty"`
	CreatorSignature      []byte             `protobuf:"bytes,3,opt,name=creator_signature,json=creatorSignature,proto3" json:"creator_signature,omitempty"`
	Key1                  string             `protobuf:"bytes,4,opt,name=key1,proto3" json:"key1,omitempty"`
	Key2                  string             `protobuf:"bytes,5,opt,name=key2,proto3" json:"key2,omitempty"`
	EncodeParameters      *EncoderParameters `protobuf:"bytes,6,opt,name=encode_parameters,json=encodeParameters,proto3" json:"encode_parameters,omitempty"`
	EncodeFiles           map[string][]byte  `protobuf:"bytes,7,rep,name=encode_files,json=encodeFiles,proto3" json:"encode_files,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SendSignedExternalStorageTicketRequest) Reset() {
	*x = SendSignedExternalStorageTicketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_storage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSignedExternalStorageTicketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSignedExternalStorageTicketRequest) ProtoMessage() {}

func (x *SendSignedExternalStorageTicketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_storage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSignedExternalStorageTicketRequest.ProtoReflect.Descriptor instead.
func (*SendSignedExternalStorageTicketRequest) Descriptor() ([]byte, []int) {
	return file_external_storage_proto_rawDescGZIP(), []int{0}
}

func (x *SendSignedExternalStorageTicketRequest) GetExternalStorageTicket() []byte {
	if x != nil {
		return x.ExternalStorageTicket
	}
	return nil
}

func (x *SendSignedExternalStorageTicketRequest) GetCreatetorPastelId() string {
	if x != nil {
		return x.CreatetorPastelId
	}
	return ""
}

func (x *SendSignedExternalStorageTicketRequest) GetCreatorSignature() []byte {
	if x != nil {
		return x.CreatorSignature
	}
	return nil
}

func (x *SendSignedExternalStorageTicketRequest) GetKey1() string {
	if x != nil {
		return x.Key1
	}
	return ""
}

func (x *SendSignedExternalStorageTicketRequest) GetKey2() string {
	if x != nil {
		return x.Key2
	}
	return ""
}

func (x *SendSignedExternalStorageTicketRequest) GetEncodeParameters() *EncoderParameters {
	if x != nil {
		return x.EncodeParameters
	}
	return nil
}

func (x *SendSignedExternalStorageTicketRequest) GetEncodeFiles() map[string][]byte {
	if x != nil {
		return x.EncodeFiles
	}
	return nil
}

type SendSignedExternalStorageTicketReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegistrationFee int64 `protobuf:"varint,1,opt,name=registration_fee,json=registrationFee,proto3" json:"registration_fee,omitempty"`
}

func (x *SendSignedExternalStorageTicketReply) Reset() {
	*x = SendSignedExternalStorageTicketReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_storage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendSignedExternalStorageTicketReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendSignedExternalStorageTicketReply) ProtoMessage() {}

func (x *SendSignedExternalStorageTicketReply) ProtoReflect() protoreflect.Message {
	mi := &file_external_storage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendSignedExternalStorageTicketReply.ProtoReflect.Descriptor instead.
func (*SendSignedExternalStorageTicketReply) Descriptor() ([]byte, []int) {
	return file_external_storage_proto_rawDescGZIP(), []int{1}
}

func (x *SendSignedExternalStorageTicketReply) GetRegistrationFee() int64 {
	if x != nil {
		return x.RegistrationFee
	}
	return 0
}

type SendPreBurnedFeeExternalStorageTxIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Txid string `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
}

func (x *SendPreBurnedFeeExternalStorageTxIDRequest) Reset() {
	*x = SendPreBurnedFeeExternalStorageTxIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_storage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPreBurnedFeeExternalStorageTxIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPreBurnedFeeExternalStorageTxIDRequest) ProtoMessage() {}

func (x *SendPreBurnedFeeExternalStorageTxIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_external_storage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPreBurnedFeeExternalStorageTxIDRequest.ProtoReflect.Descriptor instead.
func (*SendPreBurnedFeeExternalStorageTxIDRequest) Descriptor() ([]byte, []int) {
	return file_external_storage_proto_rawDescGZIP(), []int{2}
}

func (x *SendPreBurnedFeeExternalStorageTxIDRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type SendPreBurnedFeeExternalStorageTxIDReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ExternalStorageRegTxid string `protobuf:"bytes,1,opt,name=external_storage_reg_txid,json=externalStorageRegTxid,proto3" json:"external_storage_reg_txid,omitempty"`
}

func (x *SendPreBurnedFeeExternalStorageTxIDReply) Reset() {
	*x = SendPreBurnedFeeExternalStorageTxIDReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_external_storage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendPreBurnedFeeExternalStorageTxIDReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendPreBurnedFeeExternalStorageTxIDReply) ProtoMessage() {}

func (x *SendPreBurnedFeeExternalStorageTxIDReply) ProtoReflect() protoreflect.Message {
	mi := &file_external_storage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendPreBurnedFeeExternalStorageTxIDReply.ProtoReflect.Descriptor instead.
func (*SendPreBurnedFeeExternalStorageTxIDReply) Descriptor() ([]byte, []int) {
	return file_external_storage_proto_rawDescGZIP(), []int{3}
}

func (x *SendPreBurnedFeeExternalStorageTxIDReply) GetExternalStorageRegTxid() string {
	if x != nil {
		return x.ExternalStorageRegTxid
	}
	return ""
}

var File_external_storage_proto protoreflect.FileDescriptor

var file_external_storage_proto_rawDesc = []byte{
	0x0a, 0x16, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x6e, 0x6f, 0x64, 0x65, 0x1a, 0x16, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x61,
	0x72, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd9, 0x03, 0x0a,
	0x26, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x17, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x15, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e,
	0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12,
	0x2e, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x74, 0x6f, 0x72, 0x5f, 0x70, 0x61, 0x73,
	0x74, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x74, 0x6f, 0x72, 0x50, 0x61, 0x73, 0x74, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x2b, 0x0a, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x6b, 0x65, 0x79, 0x31, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x31,
	0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65, 0x79, 0x32, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6b, 0x65, 0x79, 0x32, 0x12, 0x4a, 0x0a, 0x11, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x70,
	0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x45, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x52, 0x10,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x12, 0x66, 0x0a, 0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x43, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x6e,
	0x6f, 0x64, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x45, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x69, 0x63,
	0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x1a, 0x3e, 0x0a, 0x10, 0x45, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x51, 0x0a, 0x24, 0x53, 0x65, 0x6e, 0x64,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x29, 0x0a, 0x10, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x22, 0x40, 0x0a, 0x2a, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x42, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x46, 0x65, 0x65, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x78,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x78, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x78, 0x69, 0x64, 0x22, 0x65, 0x0a,
	0x28, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x42, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x46, 0x65,
	0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x54, 0x78, 0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x39, 0x0a, 0x19, 0x65, 0x78, 0x74,
	0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x72, 0x65,
	0x67, 0x5f, 0x74, 0x78, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x67,
	0x54, 0x78, 0x69, 0x64, 0x32, 0xa9, 0x05, 0x0a, 0x0f, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61,
	0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65,
	0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x28, 0x01, 0x30, 0x01, 0x12, 0x51, 0x0a,
	0x0d, 0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x20,
	0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63, 0x63, 0x65,
	0x70, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x41, 0x63,
	0x63, 0x65, 0x70, 0x74, 0x65, 0x64, 0x4e, 0x6f, 0x64, 0x65, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x12, 0x45, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x54, 0x6f, 0x12, 0x1c, 0x2e,
	0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x54, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x54, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x87, 0x01, 0x0a, 0x1f, 0x53, 0x65, 0x6e, 0x64,
	0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x32, 0x2e, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x53, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x30, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x65, 0x6e,
	0x64, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x93, 0x01, 0x0a, 0x23, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x42, 0x75, 0x72,
	0x6e, 0x65, 0x64, 0x46, 0x65, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74,
	0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x78, 0x49, 0x44, 0x12, 0x36, 0x2e, 0x77, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x42, 0x75,
	0x72, 0x6e, 0x65, 0x64, 0x46, 0x65, 0x65, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53,
	0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x78, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x34, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x53,
	0x65, 0x6e, 0x64, 0x50, 0x72, 0x65, 0x42, 0x75, 0x72, 0x6e, 0x65, 0x64, 0x46, 0x65, 0x65, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x54, 0x78,
	0x49, 0x44, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x48, 0x0a, 0x0a, 0x53, 0x65, 0x6e, 0x64, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x1d, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x6e, 0x6f,
	0x64, 0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64,
	0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x4d, 0x0a, 0x0b, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x12, 0x1e, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1c, 0x2e, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x6e, 0x6f, 0x64, 0x65, 0x2e, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x28, 0x01,
	0x42, 0x32, 0x5a, 0x30, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70,
	0x61, 0x73, 0x74, 0x65, 0x6c, 0x6e, 0x65, 0x74, 0x77, 0x6f, 0x72, 0x6b, 0x2f, 0x67, 0x6f, 0x6e,
	0x6f, 0x64, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x6e, 0x6f, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_external_storage_proto_rawDescOnce sync.Once
	file_external_storage_proto_rawDescData = file_external_storage_proto_rawDesc
)

func file_external_storage_proto_rawDescGZIP() []byte {
	file_external_storage_proto_rawDescOnce.Do(func() {
		file_external_storage_proto_rawDescData = protoimpl.X.CompressGZIP(file_external_storage_proto_rawDescData)
	})
	return file_external_storage_proto_rawDescData
}

var file_external_storage_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_external_storage_proto_goTypes = []interface{}{
	(*SendSignedExternalStorageTicketRequest)(nil),     // 0: walletnode.SendSignedExternalStorageTicketRequest
	(*SendSignedExternalStorageTicketReply)(nil),       // 1: walletnode.SendSignedExternalStorageTicketReply
	(*SendPreBurnedFeeExternalStorageTxIDRequest)(nil), // 2: walletnode.SendPreBurnedFeeExternalStorageTxIDRequest
	(*SendPreBurnedFeeExternalStorageTxIDReply)(nil),   // 3: walletnode.SendPreBurnedFeeExternalStorageTxIDReply
	nil,                          // 4: walletnode.SendSignedExternalStorageTicketRequest.EncodeFilesEntry
	(*EncoderParameters)(nil),    // 5: walletnode.EncoderParameters
	(*SessionRequest)(nil),       // 6: walletnode.SessionRequest
	(*AcceptedNodesRequest)(nil), // 7: walletnode.AcceptedNodesRequest
	(*ConnectToRequest)(nil),     // 8: walletnode.ConnectToRequest
	(*SendTicketRequest)(nil),    // 9: walletnode.SendTicketRequest
	(*UploadImageRequest)(nil),   // 10: walletnode.UploadImageRequest
	(*SessionReply)(nil),         // 11: walletnode.SessionReply
	(*AcceptedNodesReply)(nil),   // 12: walletnode.AcceptedNodesReply
	(*ConnectToReply)(nil),       // 13: walletnode.ConnectToReply
	(*SendTicketReply)(nil),      // 14: walletnode.SendTicketReply
	(*UploadImageReply)(nil),     // 15: walletnode.UploadImageReply
}
var file_external_storage_proto_depIdxs = []int32{
	5,  // 0: walletnode.SendSignedExternalStorageTicketRequest.encode_parameters:type_name -> walletnode.EncoderParameters
	4,  // 1: walletnode.SendSignedExternalStorageTicketRequest.encode_files:type_name -> walletnode.SendSignedExternalStorageTicketRequest.EncodeFilesEntry
	6,  // 2: walletnode.ExternalStorage.Session:input_type -> walletnode.SessionRequest
	7,  // 3: walletnode.ExternalStorage.AcceptedNodes:input_type -> walletnode.AcceptedNodesRequest
	8,  // 4: walletnode.ExternalStorage.ConnectTo:input_type -> walletnode.ConnectToRequest
	0,  // 5: walletnode.ExternalStorage.SendSignedExternalStorageTicket:input_type -> walletnode.SendSignedExternalStorageTicketRequest
	2,  // 6: walletnode.ExternalStorage.SendPreBurnedFeeExternalStorageTxID:input_type -> walletnode.SendPreBurnedFeeExternalStorageTxIDRequest
	9,  // 7: walletnode.ExternalStorage.SendTicket:input_type -> walletnode.SendTicketRequest
	10, // 8: walletnode.ExternalStorage.UploadImage:input_type -> walletnode.UploadImageRequest
	11, // 9: walletnode.ExternalStorage.Session:output_type -> walletnode.SessionReply
	12, // 10: walletnode.ExternalStorage.AcceptedNodes:output_type -> walletnode.AcceptedNodesReply
	13, // 11: walletnode.ExternalStorage.ConnectTo:output_type -> walletnode.ConnectToReply
	1,  // 12: walletnode.ExternalStorage.SendSignedExternalStorageTicket:output_type -> walletnode.SendSignedExternalStorageTicketReply
	3,  // 13: walletnode.ExternalStorage.SendPreBurnedFeeExternalStorageTxID:output_type -> walletnode.SendPreBurnedFeeExternalStorageTxIDReply
	14, // 14: walletnode.ExternalStorage.SendTicket:output_type -> walletnode.SendTicketReply
	15, // 15: walletnode.ExternalStorage.UploadImage:output_type -> walletnode.UploadImageReply
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_external_storage_proto_init() }
func file_external_storage_proto_init() {
	if File_external_storage_proto != nil {
		return
	}
	file_register_artwork_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_external_storage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendSignedExternalStorageTicketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_storage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendSignedExternalStorageTicketReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_storage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPreBurnedFeeExternalStorageTxIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_external_storage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendPreBurnedFeeExternalStorageTxIDReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_external_storage_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_external_storage_proto_goTypes,
		DependencyIndexes: file_external_storage_proto_depIdxs,
		MessageInfos:      file_external_storage_proto_msgTypes,
	}.Build()
	File_external_storage_proto = out.File
	file_external_storage_proto_rawDesc = nil
	file_external_storage_proto_goTypes = nil
	file_external_storage_proto_depIdxs = nil
}
