syntax = "proto3";

option go_package = "github.com/pastelnetwork/gonode/metadb/network/proto/supernode";

package supernode;

service ProcessUserdata {
    // Session informs primary supernode about its `nodeID` and `sessID` it wants to connect to.
    // The stream is used by the parties to inform each other about the cancellation of the task.
    rpc Session(stream SessionRequest) returns (stream SessionReply);

	// SendUserdataToPrimary send signed userdata from other supernodes to primary supernode
    rpc SendUserdataToPrimary(stream SuperNodeRequest) returns (SuperNodeReply);
}

message SessionRequest {
    string nodeID = 1;
}
message SessionReply {
    string sessID = 1;
}

message SuperNodeRequest {
	message UserdataProcessResult
    {
		// Result of the request is success or not
		int32 response_code    			= 1;
		// The detail of why result is success/fail, depend on response_code
		string detail          			= 2;
		// Error detail on realname
		string realname                 = 3;
		// Error detail on facebook_link
		string facebook_link            = 4;
		// Error detail on twitter_link
		string twitter_link             = 5;
		// Error detail on native_currency
		string native_currency          = 6;
		// Error detail on location
		string location                 = 7;
		// Error detail on primary_language
		string primary_language         = 8;
		// Error detail on categories
		string categories               = 9;
		// Error detail on biography
		string biography                = 10;
		// Error detail on avatar
		string avatar_image             = 11;
		// Error detail on cover photo
		string cover_photo              = 12;			
	}
	// UserdataHash represents UserdataProcessRequest's hash value, to make sure UserdataProcessRequest's integrity 
	string userdata_hash							= 1;
	// UserdataProcessResult generate by this super node, will be send to 1st rank super node
	UserdataProcessResult userdata_process_result 	= 2;
    // UserdataResultHash represents UserdataReply's hash value, to make sure walletnode's UserdataReply integrity
	string userdata_result_hash 					= 3;
	// SuperNodeSignature is the digital signature created by supernode for the [userdata_hash+userdata_result_hash]
	string hash_signature							= 4;
	// Supernode's pastelID of this supernode generate this SuperNodeRequest
	string supernode_pastelID						= 5;
}

message SuperNodeReply {
    // Result of the request is success or not
	int32 response_code    = 1;
	// The detail of why result is success/fail, depend on response_code
	string detail          = 2;
}
